Formatierung
---------------------------------------------------------------------------------------------------

Einrückung verdeutlicht optisch, welche Codeteile zur selben logischen Ebene gehören. 
In den meisten Fällen spielt sie für die Maschine keine Rolle, sondern dient dem menschlichen Leser.
Eine Ausnahme ist Python, bei der Programmblöcke nicht durch geschweifte Klammern, 
sondern durch einrücken gebildet werden. Man kann mit leerzeichen oder mit Tabulatoren einrücken,
wobei es auch über Anzahl und Schrittweite kontrovers diskutiert wird. Üblich sind zwei und vier.
Bei Tabs auch 8 Zeichen. Bei der Verwendung von Leerzeichen sieht der Quelltext überall gleich aus.
Andererseits schreibt man damit Anderen vor, wie man den Quelltext zu betrachten hat.
Es ist nicht so wichtig, wie man Einrückt. Wichtiger ist es, dass man es konsistent macht.
Bisweilen gibt es weitere Vorschriften, dass z.B. eine Zeile nicht länger als 78 Zeichen sein darf.
Wenn man ein diff über zwei Dateien laufen lässt, dann kann man es ausdrucken, ohne das der Drucker
Zeilen umbricht. - Wer druckt den Quelltext aus?! 

Soll man sich derart einschränken, obwohl man einen 26 Zoll Bildschirm hat?

Für Kommentare gibt es eigene Überlegungen. Beispiel:
	File *f;	/* source file*/
	char *filename;	/* name of source file*/
Sollten die Kommentare so eingeückt werden, dass sie auf gleicher Höhe beginnen?
Das kann die Lesbarkeit verbessern, erfordert aber jedesmal Anpassungen, wenn sich die Länge der längsten Zeile ändert.

Kommentierung, bezogen auf eine Zeile darunter, umgeht dieses Problem, verursacht jedoch mehr Zeilen.
Beispiel:
	/* Source File*/
	File *f;
	/* name of source file*/
	char *filename;

Ein ähnliches Problem ergibt sich bei Konfigurationstabellen und anderen Initialisierungslisten:
	unsigned int coordinates[3][2] = {
		{5,7},
		{10,20},
		{192,123}
	}; 
Im Zweifelsfalls entscheidet der Entwickler. (Das Programm "coloumn" [man coloum] hilft beim Formatieren)
Leerzeichen bilden einen vertikalen Abstand, der Absätze mit zusammengehörigen Zeilen trennt.
Was und wieviel zusammengehört, ist subjektiv. Damit erreicht man eine visuelle Trennung von verschiedenen
Codeabschnitten.

Klammerstil
---------------------------------------------------------------------------------------------------

Es gibt mehrere verbreitete Möglichkeiten Klammern einzurücken:
Auf derselben, auf der eigenen und auf der nächsten Anweisungszeile; außerdem kann auf alte, eigene und neue Ebene eingerückt werden. Beispiel:

Kernighan & Ritchie:
if(c){
  something;
}

Allman:
if(c)
{
  something;
}

Whitesmith:
if(c)
 {
 something;
 }

GNU:
if(c)
  {
    something;
  }

Horstmann:
if(c)
{ something_a;
  something_b;
}

Empfehlung: K&R spart Bildschirmplatz und ist dennnoch lesbar.